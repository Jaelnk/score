{% extends 'base.html.twig' %}

{% block title %}Cliente{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ absolute_url(asset('/lib/lib/assets/css/appadmin.css')) }}"/>
    <style>
        .table-success, .table-success>td, .table-success>th {
            background-color: #d4edda; /* Ajusta el color de fondo de las filas de la tabla */
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
        }
        {# .dataTables_wrapper .dataTables_paginate .paginate_button.current,
        .dataTables_wrapper .dataTables_paginate .paginate_button.active {
            background-color: #28a745 !important; /* Color de fondo del botón activo */
            color: #fff !important; /* Color de texto del botón activo */
            border: 1px solid #28a745 !important; /* Color del borde del botón activo */
        } #}
    </style>
{% endblock %}

{% block headerlink %}
    <h4 class="py-3 mb-4"><span class="text-muted fw-light">Georeferenciación /</span> Cliente</h4>
{% endblock %}

{% block body %}
    <!-- Scrollable -->
    <div class="card">
        {# <div class="mb-3 d-flex card-header sticky-element justify-content-sm-between align-items-sm-center flex-column flex-sm-row">
            <h5 class="card-title mb-sm-0 me-2">Cliente</h5>
            <div class="action-btns">
                <a class="btn btn-coop" href="#" id="llamarJson">
                    <i class="bx bx-data me-1"></i>
                    <span class="align-middle">Llamar JSON</span>
                </a>
                <a class="btn btn-success" href="{{ path('app_tpersonadata_new') }}" id="newuser">
                    <i class="bx bx-plus me-1"></i>
                    <span class="align-middle">Nuevo cliente</span>
                </a>
            </div>
        </div> #}

        <div class="d-flex justify-content-end flex-column mb-3 me-5">
            <form method="get" action="{{ path('app_solicitud_index') }}" class="input-group d-flex justify-content-end" style="max-width: 300px;">
                <input type="text" name="identificacion" class="form-control me-2" placeholder="Buscar por Identificación" value="{{ app.request.get('identificacion') }}">
                <button class="btn btn-success" type="submit">Buscar</button>
            </form>
        </div>

        <div class="card-datatable text-nowrap">
            

            <div class="table-responsive">
                 <table class="dt-scrollableTable table table-bordered">
                    <thead {# class="bg-success text-white" #}>
        
                        <tr>
                            <th>CPersona</th>
                            <th>Identificacion</th>
                            <th>NombreLegal</th>
                            <th>NumeroSocio</th>
                            <th><strong>Ubicación</strong></th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for persona in tpersonainfos %}
                            <tr>
                                <td>{{ persona.CPersona }}</td>
                                <td>{{ persona.Identificacion }}</td>
                                <td>{{ persona.NombreLegal }}</td>
                                <td>{{ persona.NumeroSocio }}</td>
                                <td>
                                    <a href="{{ path('app_tpersonainfo_location') }}" class="btn btn-success btn-sm">Ubicación</a>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>

    </div>
    <hr class="my-5"/>
    <!--/ Scrollable -->

    <!-- Nueva tabla para datos JSON -->
    <div class="card" id="jsonDataCard" style="display: none;">
        <div class="card-header">
            <h5 class="card-title">Datos del Servicio Web</h5>
        </div>
        <div class="card-datatable text-nowrap">
            <table id="jsonDataTable" class="table table-bordered table-success">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tipo Proceso</th>
                        <th>Código Proceso</th>
                        <th>Descripción Proceso</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Los datos se insertarán aquí dinámicamente -->
                </tbody>
            </table>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        /**
         * DataTables Extensions (jquery)
         */
        'use strict';

        $(function () {
            var dt_scrollable_table = $('.dt-scrollableTable');

        // Scrollable
        // --------------------------------------------------------------------
        if (dt_scrollable_table.length) {
            var dt_scrollableTable = dt_scrollable_table.DataTable({
                orderCellsTop: true,
                "aLengthMenu": [
                    [5, 10, 25, 50, 100, 200, -1],
                    [5, 10, 25, 50, 100, 200, "Todos"]
                ],
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "lengthChange": true,
                "searching": false, // Desactiva la funcionalidad de búsqueda
                iDisplayLength: 5,
                "autoWidth": false,
                "processing": true,
                "destroy": true,
                columnDefs: [
                    {
                        // Label
                        targets: -2,
                        render: function (data, type, full, meta) {
                            var $status_number = full['status'];
                            var $status = {
                                1: {title: 'Current', class: 'bg-label-primary'},
                                2: {title: 'Professional', class: ' bg-label-success'},
                                3: {title: 'Rejected', class: ' bg-label-danger'},
                                4: {title: 'Resigned', class: ' bg-label-warning'},
                                5: {title: 'Applied', class: ' bg-label-info'}
                            };
                            if (typeof $status[$status_number] === 'undefined') {
                                return data;
                            }
                            return (
                                '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + '</span>'
                            );
                        }
                    }
                ],
                // Scroll options
                //scrollY: '300px',
                //scrollX: true,
                dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end">>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>'
            });
        }

        // Filter form control to default size
        // ? setTimeout used for multilingual table initialization
        setTimeout(() => {
            $('.dataTables_filter .form-control').removeClass('form-control-sm');
            $('.dataTables_length .form-select').removeClass('form-select-sm');
        }, 200);
        });

        // Agregar evento para el botón "Llamar JSON"
        document.getElementById('llamarJson').addEventListener('click', function(e) {
            e.preventDefault();
            fetch('http://172.16.1.231:8080/api/proceso/all', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                }
            })
            .then(response => response.json())
            .then(data => {
                const tableBody = document.querySelector('#jsonDataTable tbody');
                tableBody.innerHTML = ''; // Limpiar tabla existente

                data.forEach(item => {
                    const row = `
                        <tr class="table-success">
                            <td>${item.id}</td>
                            <td>${item.tipoProceso}</td>
                            <td>${item.codigoProceso}</td>
                            <td>${item.descripcionProceso}</td>
                        </tr>
                    `;
                    tableBody.innerHTML += row;
                });

                // Mostrar la tabla
                document.getElementById('jsonDataCard').style.display = 'block';

                // Inicializar DataTables en la nueva tabla
                $('#jsonDataTable').DataTable({
                    "language": {
                        "sProcessing": "Procesando...",
                        "sLengthMenu": "Mostrar _MENU_ registros",
                        "sZeroRecords": "No se encontraron resultados",
                        "sEmptyTable": "Ningún dato disponible en esta tabla",
                        "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                        "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                        "sSearch": "Buscar:",
                        "oPaginate": {
                            "sFirst": "Primero",
                            "sLast": "Último",
                            "sNext": "Siguiente",
                            "sPrevious": "Anterior"
                        },
                        "sUrl": "",
                        "sInfoThousands": ",",
                        "sLoadingRecords": "Cargando...",
                        "oAria": {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        }
                    },
                    "lengthChange": true,
                    "searching": true,
                    iDisplayLength: 10,
                    "autoWidth": false,
                    "processing": true,
                    "destroy": true
                });
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Hubo un error al obtener los datos. Por favor, intenta de nuevo.');
            });
        });
    </script>
{% endblock %}